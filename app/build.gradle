import org.apache.tools.ant.taskdefs.condition.Os

/*
 * Copyright 2015 Hippo Seven
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.hippo.nimingban"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 36
        versionName "1.2.22"
        resConfigs "zh", "zh-rCN"
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
            // Disable default NdkCompile task
            jni.srcDirs = []
            // Set new jni lib dir
            jniLibs.srcDir 'src/main/libs'
        }
    }

    // noinspection GroovyAssignabilityCheck
    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
        def ndkDir = project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder()
        def ndkBuilder
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            ndkBuilder = 'ndk-build.cmd'
        } else {
            ndkBuilder = 'ndk-build'
        }
        commandLine "$ndkDir\\$ndkBuilder",
                '-C', file('src/main/jni').absolutePath,
                '-j', Runtime.runtime.availableProcessors()
    }

    //noinspection GroovyAssignabilityCheck
    task renameGifSicle(type: Exec, description: 'Compile JNI source via NDK') {
        commandLine 'cmd', '/c', 'rename_gifsicle.bat'
    }

    renameGifSicle.dependsOn ndkBuild

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn renameGifSicle
    }
}

task copyNotice(type: Copy) {
    from '../NOTICE'
    into './src/main/assets'
}

clean {
    delete file('src/main/obj').absolutePath
    delete file('src/main/libs').absolutePath
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':android-advancedrecyclerview')
    compile project(':beerbelly')
    compile project(':conaco')
    compile project(':easyrecyclerview')
    compile project(':hotspot')
    compile project(':photoview')
    compile project(':rippleold')
    compile project(':swipebacklayout')
    compile project(':unifile')
    compile project(':vector')
    compile project(':yorozuya')
    compile 'com.alibaba:fastjson:1.1.45.android'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.android.support:customtabs:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.squareup.okhttp3:okhttp:3.0.1'
    compile 'de.greenrobot:greendao:1.3.7'
    compile 'org.ccil.cowan.tagsoup:tagsoup:1.2.1'
    compile 'org.jsoup:jsoup:1.8.3'
}
